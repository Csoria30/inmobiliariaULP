@model inmobiliariaULP.Models.Persona



@{
    bool esEdicion = Model?.PersonaId > 0;
    ViewData["Title"] = esEdicion ? "Editar Persona" : "Crear Persona";
}

<div class="container mt-4">
    <h2 class="text-primary mb-4">
        <i class="bi @(esEdicion ? "bi-pencil-square" : "bi-person-plus") me-2"></i>
        @(esEdicion ? "Edición de Persona" : "Crear Nueva Persona")
    </h2>


    <form asp-action="@(esEdicion ? "Edit" : "Create")" asp-controller="Persona" class="needs-validation" novalidate>
        
        @if (esEdicion)
        {
            <input type="hidden" asp-for="PersonaId" />
        }

        <!-- Información Personal -->
        <div class="row mb-4">
            <div class="col-md-6 mb-3">
                <label asp-for="Dni" class="form-label"></label>
                <input asp-for="Dni" class="form-control" maxlength="8" />
                <span asp-validation-for="Dni" class="text-danger"></span>
                <div class="form-text">8 dígitos numéricos</div>
            </div>

            <div class="col-md-6 mb-3">
                <label asp-for="Apellido" class="form-label"></label>
                <input asp-for="Apellido" class="form-control" />
                <span asp-validation-for="Apellido" class="text-danger"></span>
            </div>

            <div class="col-md-6 mb-3">
                <label asp-for="Nombre" class="form-label"></label>
                <input asp-for="Nombre" class="form-control" />
                <span asp-validation-for="Nombre" class="text-danger"></span>
            </div>

            <div class="col-md-6 mb-3">
                <label asp-for="Telefono" class="form-label"></label>
                <input asp-for="Telefono" class="form-control" />
                <span asp-validation-for="Telefono" class="text-danger"></span>
            </div>

            <div class="col-12 mb-3">
                <label asp-for="Email" class="form-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
        </div>

        <!-- Asignación de Perfiles -->
        <div class="row mb-4">
            <div class="col-12">

                <div class="mb-2">
                    <span class="fw-semibold text-secondary">
                        <i class="bi bi-person-badge me-1"></i>Asignación de Perfiles
                    </span>
                    <div class="form-text mb-2">
                        Selecciona uno o ambos perfiles para esta persona.
                    </div>
                </div>

                <label class="form-label d-block mb-3">Tipo de Persona</label>                
                <div class="d-flex gap-3 flex-wrap">                    
                    <!-- Inquilino -->
                    <div class="card flex-fill text-center tipo-persona-card border-primary p-3" style="cursor:pointer; min-width:12rem;">
                        <div class="card-body">
                            <i class="bi bi-house-door-fill display-4 text-primary"></i>
                            <p class="mt-2 mb-0 fw-semibold">Inquilino</p>
                            <input 
                                type="checkbox" 
                                name="TipoPersona"
                                value="inquilino" 
                                class="form-check-input mt-2" 
                                style="transform: scale(1.5);" 
                                checked="@(Model?.TipoPersona != null && Model.TipoPersona.Contains("inquilino") ? "checked" : null)"
                            />
                        </div>
                    </div>
        
                    <!-- Propietario -->
                    <div class="card flex-fill text-center tipo-persona-card border-success p-3" style="cursor:pointer; min-width:12rem;">
                        <div class="card-body">
                            <i class="bi bi-person-fill display-4 text-success"></i>
                            <p class="mt-2 mb-0 fw-semibold">Propietario</p>
                            <input 
                                type="checkbox" 
                                name="TipoPersona"
                                value="propietario" 
                                class="form-check-input mt-2" 
                                style="transform: scale(1.5);" 
                                checked="@(Model?.TipoPersona != null && Model.TipoPersona.Contains("propietario") ? "checked" : null)"
                            />
                        </div>
                    </div>
                </div>
            </div>
        </div>


        <button type="submit" class="btn btn-primary">
            <i class="bi bi-check-circle me-2"></i>Crear Persona
        </button>
        <a asp-action="Index" class="btn btn-secondary">Cancelar</a>
    </form>



</div>

@section Scripts
{
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const cards = document.querySelectorAll('.tipo-persona-card');

            cards.forEach(card => {
                const checkbox = card.querySelector('input[type="checkbox"]');

                // Si al cargar la página el checkbox está marcado, resaltar la card
                if (checkbox.checked) {
                    card.classList.add('selected');
                }

                // Al hacer clic en la card
                card.addEventListener('click', (e) => {
                    // Evitamos que al hacer clic justo sobre el checkbox se ejecute dos veces
                    if (e.target.tagName.toLowerCase() === 'input') return;

                    // Cambiamos el estado del checkbox (toggle)
                    checkbox.checked = !checkbox.checked;

                    // Estilo visual
                    if (checkbox.checked) {
                        card.classList.add('selected');
                    } else {
                        card.classList.remove('selected');
                    }
                });

                // Si el usuario clickea directamente el checkbox, mantenemos el estilo sincronizado
                checkbox.addEventListener('change', () => {
                    if (checkbox.checked) {
                        card.classList.add('selected');
                    } else {
                        card.classList.remove('selected');
                    }
                });
            });
        });
    </script>
}
