@model inmobiliariaULP.Models.Persona

@{
    bool esEdicion = Model?.PersonaId > 0;
    bool soloLectura = ViewBag.SoloLectura == true;

    if (soloLectura)
    {
        ViewData["Title"] = "Información completa";
    }
    else
    {
        ViewData["Title"] = esEdicion ? "Editar Persona" : "Crear Persona";
    }
}

<div class="container mt-4">
    <h2 class="text-primary mb-4">
        <i class="bi 
            @(soloLectura ? "bi-eye" : (esEdicion ? "bi-pencil-square" : "bi-person-plus")) me-2">
        </i>
        @(soloLectura ? "Información completa" : (esEdicion ? "Edición de Persona" : "Crear Nueva Persona"))
    </h2>


    <form asp-action="@(esEdicion ? "Edit" : "Create")" asp-controller="Persona" class="needs-validation" novalidate>
        
        @if (esEdicion)
        {
            <input type="hidden" asp-for="PersonaId" />
        }

        <!-- Información Personal -->
        <div class="row mb-4">
            <div class="col-md-6 mb-3">
                <label asp-for="Dni" class="form-label"></label>
                @if (soloLectura)
                {
                    <input asp-for="Dni" class="form-control" maxlength="8" readonly="readonly" />
                }
                else
                {
                    <input asp-for="Dni" class="form-control" maxlength="8" />
                }
                <span asp-validation-for="Dni" class="text-danger"></span>
                <div class="form-text">8 dígitos numéricos</div>
            </div>

            <div class="col-md-6 mb-3">
                <label asp-for="Apellido" class="form-label"></label>
                @if (soloLectura)
                {
                    <input asp-for="Apellido" class="form-control" readonly="readonly"/>
                }else
                {
                    <input asp-for="Apellido" class="form-control" />
                }
                <span asp-validation-for="Apellido" class="text-danger"></span>
            </div>

            <div class="col-md-6 mb-3">
                <label asp-for="Nombre" class="form-label"></label>
                @if (soloLectura)
                {
                    <input asp-for="Nombre" class="form-control" readonly="readonly"/>
                }
                else
                {
                    <input asp-for="Nombre" class="form-control" />
                }
                <span asp-validation-for="Nombre" class="text-danger"></span>
            </div>

            <div class="col-md-6 mb-3">
                <label asp-for="Telefono" class="form-label"></label>
                @if (soloLectura)
                {
                    <input asp-for="Telefono" class="form-control" readonly="readonly"/>
                }
                else
                {
                    <input asp-for="Telefono" class="form-control" />
                }
                <span asp-validation-for="Telefono" class="text-danger"></span>
            </div>

            <div class="col-12 mb-3">
                <label asp-for="Email" class="form-label"></label>
                @if (soloLectura)
                {
                    <input asp-for="Email" class="form-control" readonly="readonly"/>
                }
                else
                {
                    <input asp-for="Email" class="form-control" />
                }
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
        </div>

        <!-- Asignación de Perfiles -->
        <div class="row mb-4">
            <div class="col-12">

                <div class="mb-2">
                    <span class="fw-semibold text-secondary">
                        <i class="bi bi-person-badge me-1"></i>Asignación de Perfiles
                    </span>
                    <div class="form-text mb-2">
                        Selecciona uno o ambos perfiles para esta persona.
                    </div>
                </div>

                <label class="form-label d-block mb-3">Tipo de Persona</label>                
                <div class="d-flex gap-3 flex-wrap">                    
                    
                    <!-- Inquilino -->
                    @{
                        var disabledAttr = soloLectura ? "disabled=\"disabled\"" : "";
                    }
                    <div class="card flex-fill text-center tipo-persona-card border-primary p-3" style="cursor:pointer; min-width:12rem;">
                        <div class="card-body">
                            <i class="bi bi-house-door-fill display-4 text-primary"></i>
                            <p class="mt-2 mb-0 fw-semibold">Inquilino</p>
                            <input 
                                type="checkbox" 
                                name="TipoPersona"
                                value="inquilino" 
                                class="form-check-input mt-2" 
                                style="transform: scale(1.5);" 
                                checked="@(Model?.TipoPersona != null && Model.TipoPersona.Contains("inquilino") ? "checked" : null)"
                                @disabledAttr
                            />
                        </div>
                    </div>
        
                    <!-- Propietario -->
                    <div class="card flex-fill text-center tipo-persona-card border-success p-3" style="cursor:pointer; min-width:12rem;">
                        <div class="card-body">
                            <i class="bi bi-person-fill display-4 text-success"></i>
                            <p class="mt-2 mb-0 fw-semibold">Propietario</p>
                            <input 
                                type="checkbox" 
                                name="TipoPersona"
                                value="propietario" 
                                class="form-check-input mt-2" 
                                style="transform: scale(1.5);" 
                                checked="@(Model?.TipoPersona != null && Model.TipoPersona.Contains("propietario") ? "checked" : null)"
                                @disabledAttr
                            />
                        </div>
                    </div>

                </div>
                <div id="checkboxError" class="text-danger fw-semibold mb-2" style="display:none;">
                    Debe seleccionar al menos un perfil (Inquilino y/o Propietario).
                </div>
                
            </div>
        </div>

        
        @if (!soloLectura)
        {
            <button type="submit" class="btn btn-primary">
                <i class="bi @(esEdicion ? "bi-pencil-square" : "bi-check-circle") me-2"></i>
                @(esEdicion ? "Guardar Cambios" : "Crear Persona")
            </button>
            <a asp-action="Index" class="btn btn-secondary">Cancelar</a>
        }else{
            @* <a asp-action="Index" class="btn btn-secondary">
                <i class="bi bi-arrow-left-circle me-2"></i>Volver
            </a> *@
            <a href="@ViewBag.ReturnUrl" class="btn btn-secondary">Volver</a>
        }

    </form>



</div>

@section Scripts
{
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const cards = document.querySelectorAll('.tipo-persona-card');
            const form = document.querySelector('form');
            const checkboxes = document.querySelectorAll('input[type="checkbox"][name="TipoPersona"]');
            
            // Validación visual de selección de card
            cards.forEach(card => {
                const checkbox = card.querySelector('input[type="checkbox"]');
                
                //Si el checkbox ya está marcado al cargar la página, se le agrega la clase selected
                if (checkbox.checked) {
                    card.classList.add('selected');
                }
                
                //Click sobre la tarjeta
                card.addEventListener('click', (e) => {
                    //// No hacer nada si el checkbox está deshabilitado
                    if (checkbox.disabled) return;
                    if (e.target.tagName.toLowerCase() === 'input') return;

                    // Cambia manualmente el estado del checkbox
                    checkbox.checked = !checkbox.checked;

                    // Agrega o quita la clase 'selected'
                    if (checkbox.checked) {
                        card.classList.add('selected');
                    } else {
                        card.classList.remove('selected');
                    }

                });

                // Escucha cambios direcntos en los checkboxs
                checkbox.addEventListener('change', () => {
                    if (checkbox.checked) {
                        card.classList.add('selected');
                    } else {
                        card.classList.remove('selected');
                    }
                });
            });

            // Validación de al menos un checkbox seleccionado
            if (form) {
                form.addEventListener('submit', function (e) {
                    // Solo validar si NO es solo lectura
                    if (@(soloLectura.ToString().ToLower())) return;

                    // Comprobar si hay algún checkbox seleccionado
                    let algunoSeleccionado = false;
                    checkboxes.forEach(cb => {
                        if (cb.checked) algunoSeleccionado = true;
                    });

                    //Manejo de error - Al menos uno selecionado
                    const errorDiv = document.getElementById('checkboxError');
                    if (!algunoSeleccionado) {
                        e.preventDefault();
                        if (errorDiv) {
                            errorDiv.style.display = 'block';
                        }
                        // Scroll al error
                        errorDiv.scrollIntoView({ behavior: "smooth", block: "center" });
                    } else {
                        if (errorDiv) {
                            errorDiv.style.display = 'none';
                        }
                    }
                });
            }
        });
    </script>
}
